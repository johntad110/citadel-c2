name: Build and Release

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pytest colorama
          pip install -e .

      - name: Run tests
        run: pytest tests/

      - name: Build Citadel Server ({{ matrix.os }})
        run: |
          pyinstaller --onefile main.py --name citadel_${{ matrix.os }}

      - name: Build Phantom Agent ({{ matrix.os }})
        run: |
          pyinstaller --onefile citadel/agent/phantom.py --name phantom_${{ matrix.os }} --collect-all citadel.protocol

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: "Release v${{ github.run_number }}"
          draft: false
          prerelease: false

      - name: Upload Citadel Server
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/citadel_${{ matrix.os }}
          asset_name: citadel_${{ matrix.os }}
          asset_content_type: application/octet-stream

      - name: Upload Phantom Agent
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/phantom_${{ matrix.os }}
          asset_name: phantom_${{ matrix.os }}
          asset_content_type: application/octet-stream
